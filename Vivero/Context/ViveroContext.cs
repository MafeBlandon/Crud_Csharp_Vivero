// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Vivero.Models;

namespace Vivero.Context
{
    public partial class ViveroContext : DbContext
    {
        public ViveroContext()
        {
        }

        public ViveroContext(DbContextOptions<ViveroContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Jardineros> Jardineros { get; set; }
        public virtual DbSet<Plantas> Plantas { get; set; }
        public virtual DbSet<Visitantes> Visitantes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Jardineros>(entity =>
            {
                entity.ToTable("jardineros");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codigo");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Plantas>(entity =>
            {
                entity.ToTable("plantas");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Imagen)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("imagen");

                entity.Property(e => e.Jardineros).HasColumnName("jardineros");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Valor).HasColumnName("valor");

                entity.HasOne(d => d.JardinerosNavigation)
                    .WithMany(p => p.Plantas)
                    .HasForeignKey(d => d.Jardineros)
                    .HasConstraintName("FK__plantas__jardine__267ABA7A");
            });

            modelBuilder.Entity<Visitantes>(entity =>
            {
                entity.ToTable("visitantes");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("apellido");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Planta).HasColumnName("planta");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("telefono");

                entity.HasOne(d => d.PlantaNavigation)
                    .WithMany(p => p.Visitantes)
                    .HasForeignKey(d => d.Planta)
                    .HasConstraintName("FK__visitante__plant__29572725");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}